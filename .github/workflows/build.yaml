name: Go

on:
  push:
    tags:
      - 'V*'

jobs:
  build:
    name: ü¶æ Unit Test & Build
    runs-on: ubuntu-latest
    
    container:
      image: parkkihyun/acra-test:0.9.1
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v3
      
      - name: echo ref_name
        run: echo ${{github.ref_name}}

      - name: üíæ Register File name in env
        run:  |
          echo "FILE_NAME=$(echo ${{ github.ref }} | sed 's|refs/tags/||')_wsub" >> $GITHUB_ENV
          echo "TAG_NAME=$(echo ${{ github.ref }} | sed 's|refs/tags/||')" >> $GITHUB_ENV

      - name: üßô Config GO env
        run: |
          go env -w GOPRIVATE=github.com/TeamTestCodeowner
          go env -json
      
      - name: üßô Config Git
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global url."https://${{secrets.GIT_USERNAME}}:${{secrets.TOKEN}}@github.com/TeamTestCodeowner".insteadOf "https://github.com/TeamTestCodeowner"
          git config -l

      - name: ‚úÖ git check
        run: git status

      - name: üî• Get dependencies
        run: go mod tidy

      - name: üíΩ Test
        run: make test
        
      - name: üõ†Ô∏è Build
        run: make build && ls -al

      - name: üíæ Save file in artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.FILE_NAME}}
          path: ${{github.workspace}}/${{env.FILE_NAME}}
      
      - name: üì© Send email
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: From Github Actions's build file
          body: Hi! This is artifacts of ${{github.repository}}.
          to: pentakihyun@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          attachments: ${{github.workspace}}/${{env.FILE_NAME}}
      
      # - name: üì• Notify on Slack when Success
      #   if: success()
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     SLACK_CHANNEL: C06HT8UA1H6
      #     SLACK_COLOR: good
      #     SLACK_MESSAGE: 'Build succeeded! :tada:'
      #     SLACK_TITLE: 'Success Notification'
      #     SLACK_USERNAME: 'GitHub Actions'
      
      - name: üì• Notify on Slack when Success
        
        id: slack-success
        uses: 8398a7/action-slack@v3
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
          mention: here
          if_mention: failure, cancelled
          # payload: |
          #   {
          #     "channel": "C06HT8UA1H6",
          #     "attachments": [
          #       {
          #         "color": "#36a64f",
          #         "title": "Build in ${{ github.repository }}",
          #         "title_link": "https://github.com/${{github.repository}}",
          #         "text": "üöÄ GitHub Action ÏÑ±Í≥µ",
          #         "fields": [
          #           {
          #             "title": "Repository",
          #             "value": "${{ github.repository }}",
          #             "short": true
          #           },
          #           {
          #             "title": "Version",
          #             "value": "${{ github.ref_name }}",
          #             "short": true
          #           },
          #           {
          #             "title": "Branch",
          #             "value": "${{ github.ref_name }}",
          #             "short": true
          #           },
          #           {
          #             "title": "Commit",
          #             "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha_short }}>",
          #             "short": true
          #           },
          #           {
          #             "title": "Actions Log",
          #             "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Workflow Log>",
          #             "short": true
          #           }
          #         ]      
          #       }
          #     ]
          #   }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

          
      - name: üì• Notify on Slack when Success Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: C06HT8UA1H6
          SLACK_COLOR: danger
          SLACK_MESSAGE: 'Build failed! :x:'
          SLACK_TITLE: 'Failure Notification'
          SLACK_USERNAME: 'GitHub Actions'


  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check workspace
        run: echo ${{github.workspace}}

      - name: üíæ Register File name in env
        run:  |
          echo "FILE_NAME=$(echo ${{ github.ref }} | sed 's|refs/tags/||')_wsub" >> $GITHUB_ENV
          echo "TAG_NAME=$(echo ${{ github.ref }} | sed 's|refs/tags/||')" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{env.FILE_NAME}}
          path: ${{github.workspace}}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{env.TAG_NAME}}
          release_name: Release ${{env.FILE_NAME}}
          body: |
            # Release Success !
            - Ïù¥Î∂ÄÎ∂ÑÏùÄ Î¶¥Î¶¨Ï¶à ÎÖ∏Ìä∏Î•º ÏûëÏÑ±ÌïòÎäî Î∂ÄÎ∂ÑÏûÖÎãàÎã§.

            ## sub
            - Î∫ÑÏÖà ÌîÑÎ°úÍ∑∏Îû®ÏûÖÎãàÎã§.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{github.workspace}}/${{env.FILE_NAME}}
          asset_name: ${{env.FILE_NAME}}.tar
          asset_content_type: application/x-tar